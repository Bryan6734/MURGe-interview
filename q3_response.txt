Q3: Are there any major limitations to the constrained generation approach you have implemented?

Yes, there are. The main one is that not all environments come with a well-defined affordance function (i.e. get_valid_actions). In real-world environments, we would likely have to implement separate models like in SayCan to break down the objective into several, low-level skills and determine their affordance score. 
(2) Not all actions are equally probably to succeed. What happens if two actions are equally relevant and affordable (i.e. going to the train vs. the bus), but they are not equally likely to succeed (i.e. the bus is chronically late, but the train is always on time)? 
(3) There are probably some optimizations that can be made with the prompting. 

